@model Tournament.Models.Match

@{
    ViewBag.Title = "Scoring";
}

<h2>Scoring</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4> Match</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.RoundId)
    @Html.HiddenFor(model => model.Rink)
    @Html.HiddenFor(model => model.TeamNo1)
    @Html.HiddenFor(model => model.TeamNo2)
    @Html.HiddenFor(model=>model.rowversion)
    

    <div class="form-group">
        @Html.LabelFor(model => model.RoundId, "Round Number", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Model.Schedule.RoundName
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rink, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Model.Rink
        </div>
    </div>

    
   

    <div class="form-group">
        @{
            string players="";
            switch ((int)ViewBag.TeamSize)
            {
                case 1:
                    players = $"Team #{Model.Team.TeamNo} Score ({Model.Team.Player.NickName})";
                    break;
                case 2:
                    players = $"Team #{Model.Team.TeamNo} Score ({Model.Team.Player.NickName}, {Model.Team.Player2.NickName})";
                    break;
                case 3:
                    players = $"Team #{Model.Team.TeamNo} Score ({Model.Team.Player.NickName}, {Model.Team.Player1.NickName}, {Model.Team.Player2.NickName})";
                    break;
            }
        }
        @Html.Label(players, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Team1Score, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Team1Score, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @{
            string players1="";
            switch ((int)ViewBag.TeamSize)
            {
                case 1:
                    players1 = $"Team #{Model.Team1.TeamNo} Score ({Model.Team1.Player.NickName})";
                    break;
                case 2:
                    players1 = $"Team #{Model.Team1.TeamNo} Score ({Model.Team1.Player.NickName}, {Model.Team1.Player2.NickName})";
                    break;
                case 3:
                    players1 = $"Team #{Model.Team1.TeamNo} Score ({Model.Team1.Player.NickName}, {Model.Team1.Player1.NickName}, {Model.Team.Player2.NickName})";
                    break;
            }
        }
        @Html.Label(players1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Team2Score, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Team2Score, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ForFeitId, "Team Forfeiting", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ForFeitId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ForFeitId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new {RoundId=Model.RoundId})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function() {
            switch ($("#ForFeitId").find(":selected").val()) {
            case "0":
                $("#Team1Score").prop('disabled', false);
                $("#Team2Score").prop('disabled', false);
                break;
            default:
                $("#Team1Score").val(0);
                $("#Team2Score").val(0);
                $("#Team1Score").prop('disabled', true);
                $("#Team2Score").prop('disabled', true);
                break;
            }
        });

        $('#ForFeitId').change(function() {
            switch ($(this).find(":selected").val()) {
            case "0":
                $("#Team1Score").prop('disabled', false);
                $("#Team2Score").prop('disabled', false);
                break;
            default:
                $("#Team1Score").val(0);
                $("#Team2Score").val(0);
                $("#Team1Score").prop('disabled', true);
                $("#Team2Score").prop('disabled', true);
                break;
            }
        });
    </script>
}
