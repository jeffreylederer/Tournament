@using System.Security.AccessControl
@using System.Web.UI.WebControls
@using Tournament.Extensions
@model IEnumerable<Tournament.Models.Match>

@{
    ViewBag.Title = "Index";
}

<h2> Matches for @ViewBag.Date</h2>
@using (Html.BeginForm("Index", "Matches", FormMethod.Post))
{
    <div>

        @Html.DropDownList("RoundId", (SelectList)ViewBag.ScheduleID, "Select Round", new { @class = "form-control" })
        <input type="submit" value="Select Round" class="btn btn-primary" />
    </div>
}
<br />

<p>
    @Html.ActionLink("This week's standings report", "StandingsReport", new {id = ViewBag.RoundId })<br/>
    @Html.ActionLink("This week's score cards", "ScoreCardReport", new {id= ViewBag.RoundId })
</p>

<table class="table-condensed table-striped">
    <tr>
        <th>
            Exchange Rink
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rink)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Schedule.RoundName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TeamNo1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TeamNo2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Team1Score)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Team2Score)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ForFeitId)
        </th>
        <th></th>
    </tr>
    @{ var id = 0;}
    @foreach (var item in Model)
    {
    <tr>
        <td>
            @{
                if (@id > 0)
                {
                    @Html.ActionImage("MoveUp", new { id = id, weekid = ViewBag.WeekID }, "~/Content/Images/uparrow.png", "Move Up one rink");
                }
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rink)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Schedule.RoundName)
        </td>
        <td>
            @{
                switch ((int)ViewBag.TeamSize)
                {
                    case 1:
                        @Html.Raw($"{item.Team.TeamNo} ({item.Team.Player.NickName})");
                        break;
                    case 2:
                        @Html.Raw($"{item.Team.TeamNo} ({item.Team.Player.NickName}, {item.Team.Player2.NickName})");
                        break;
                    case 3:
                        @Html.Raw($"{item.Team.TeamNo} ({item.Team.Player.NickName}, {item.Team.Player1.NickName}, {item.Team.Player2.NickName})");
                        break;
                }
            }

         </td>
        
                <td>
                    @{
                        switch ((int)ViewBag.TeamSize)
                        {
                            case 1:
                                @Html.Raw($"{item.Team1.TeamNo} ({item.Team1.Player.NickName})");
                                break;
                            case 2:
                                @Html.Raw($"{item.Team1.TeamNo} ({item.Team1.Player.NickName}, {item.Team1.Player2.NickName})");
                                break;
                            case 3:
                                @Html.Raw($"{item.Team1.TeamNo} ({item.Team1.Player.NickName}, {item.Team1.Player1.NickName}, {item.Team1.Player2.NickName})");
                                break;
                        }
                    }
                </td>
        
                <td>
                    @Html.DisplayFor(modelItem => item.Team1Score)
                </td>
        
                <td>
                    @Html.DisplayFor(modelItem => item.Team2Score)
                </td>
        <td>
            @if (item.ForFeitId != 0)
            {
                if (item.Team.id == item.ForFeitId)
                {
                    @Html.Raw(item.Team.TeamNo)
                }
                else
                {
                    @Html.Raw(item.Team1.TeamNo)
                }
            }
        </td>
                <td>
                   @Html.ActionLink("Scoring", "Scoring", new { id = item.id })
                </td>
        
            </tr>
                id++;
                }

</table>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
