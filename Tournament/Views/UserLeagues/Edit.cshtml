@model Tournament.Models.UserLeague

@{
    ViewBag.Title = "Edit";
    var dict = new List<SelectListItem>()
    {
        new SelectListItem() {Value = "", Text = "Observer"},
        new SelectListItem() {Value = "Scorer", Text = "Scorer"},
        new SelectListItem() {Value = "LeagueAdmin", Text = "League Administrator"}
    };
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>User League</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    @Html.HiddenFor(model => model.UserId)

    @Html.HiddenFor(model => model.LeagueId)
    @Html.HiddenFor(model => model.rowversion)

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Model.User.username
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.League.LeagueName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Model.League.LeagueName
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Roles, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Roles", dict, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new {id=Model.LeagueId})
</div>
