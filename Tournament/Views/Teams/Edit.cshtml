@model Tournament.Models.Team

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>@ViewBag.LeagueName Team</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.Skip)
        @Html.HiddenFor(model => model.Leagueid)
        @Html.HiddenFor(model => model.rowversion)

        <div class="form-group">
            @Html.LabelFor(model => model.TeamNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeamNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeamNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Skip, "Skip", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.Player.FullName
            </div>
        </div>
        @{
            if ((int)ViewBag.TeamSize > 2)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.ViceSkip, "Vice Skip", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ViceSkip", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ViceSkip, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {

                @Html.HiddenFor(model => model.ViceSkip)
            }
        }

        @{
            if ((int)ViewBag.TeamSize > 1)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Lead, "Lead", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Lead", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Lead, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {

                @Html.HiddenFor(model => model.Lead)
            }
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
</div>
}

<h2>Teams So Far</h2>
<table class="table-condensed table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TeamNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Skip)
        </th>
        @{
            if ((int) ViewBag.TeamSize > 2)
            {
                <th>
                    @Html.DisplayNameFor(model => model.ViceSkip)
                </th>
            }
        }

    @{
        if ((int) ViewBag.TeamSize > 1)
        {

            <th>
                @Html.DisplayNameFor(model => model.Lead)
            </th>
        }
    }
        </tr>

    @foreach (var item in (IEnumerable<Tournament.Models.Team>) ViewBag.Teams)
    {
    <tr>
        <th>
            @Html.DisplayFor(modelItem => item.TeamNo)
        </th>
        <td>
            @Html.DisplayFor(modelItem => item.Player.FullName)
        </td>
    
        @if ((int) ViewBag.TeamSize > 2)
        {

            <td>
                @Html.DisplayFor(modelItem => item.Player1.FullName)
            </td>
        }

        @if ((int) ViewBag.TeamSize > 1)
        {

            <td>
                @Html.DisplayFor(modelItem => item.Player2.FullName)
            </td>
        }


        </tr>
    }
</table>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
