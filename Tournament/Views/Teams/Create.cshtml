@using Newtonsoft.Json.Linq
@model Tournament.Models.Team

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LeagueLayout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Team</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Leagueid)
    @Html.HiddenFor(model=>model.TeamNo);
    <div class="form-group">
        @Html.LabelFor(model => model.TeamNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.TeamNo, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        <div class="form-group">
            @Html.LabelFor(model => model.Skip, "Skip", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Skip, new SelectList(ViewBag.List, "id", "FullName",Model.Skip), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Skip, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @{
        if ((int)ViewBag.TeamSize > 2)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ViceSkip, "Vice Skip", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ViceSkip, new SelectList(ViewBag.List, "id", "FullName",Model.ViceSkip), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ViceSkip, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {

            @Html.HiddenFor(model => model.ViceSkip)
        }
    }

    @{
        if ((int)ViewBag.TeamSize > 1)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Lead, "Lead", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Lead, new SelectList(ViewBag.List, "id", "FullName",Model.Lead),  htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Lead, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {

            @Html.HiddenFor(model => model.Lead)
        }
    }
   

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
</div>
}

<p class="h4">You can leave some positions open while considering the makeup of the teams</p>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<h2>Teams So Far</h2>
<table class="table-condensed table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TeamNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Skip)
        </th>
        @{
            if ((int) ViewBag.TeamSize > 2)
            {
                <th>
                    @Html.DisplayNameFor(model => model.ViceSkip)
                </th>
            }
        }

        @{
            if ((int) ViewBag.TeamSize > 1)
            {

                <th>
                    @Html.DisplayNameFor(model => model.Lead)
                </th>
            }
        }
    </tr>

    @foreach (var item in (IEnumerable<Tournament.Models.Team>) ViewBag.Teams)
    {
        <tr>
            <th>
                @Html.DisplayFor(modelItem => item.TeamNo)
            </th>
            <td>
                @Html.DisplayFor(modelItem => item.Player.Membership.FullName)
            </td>
    
            @if ((int) ViewBag.TeamSize > 2)
            {

            <td>
                @Html.DisplayFor(modelItem => item.Player1.Membership.FullName)
            </td>
            }

            @if ((int) ViewBag.TeamSize > 1)
            {

            <td>
                @Html.DisplayFor(modelItem => item.Player2.Membership.FullName)
            </td>
            }


        </tr>
    }
</table>



