@model IEnumerable<Tournament.Models.Membership>

@{
    ViewBag.Title = "Index";
}

<h2>Membership</h2>

<p>
@{
    if (HttpContext.Current.User.IsInRole("Admin") || HttpContext.Current.User.IsInRole("LeagueAdmin"))
    {
        @Html.ActionLink("Add a Membership", "Create")
    }
}



<p> Total Memberships: @ViewBag.Count<p/>


<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.FullNameSortParm })
        </th>

        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.shortname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NickName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Wheelchair)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
    <td>
        @Html.DisplayFor(modelItem => item.LastName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.FirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.FullName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.shortname)
    </td>
        <td>
            @Html.DisplayFor(modelItem => item.NickName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Wheelchair)
        </td>
    <td>
    @{
        if (HttpContext.Current.User.IsInRole("Admin") || HttpContext.Current.User.IsInRole("LeagueAdmin"))
        {
            @Html.ActionLink("Edit", "Edit", new {id = item.id});  
            @Html.Raw(" | ");
            @Html.ActionLink("Delete", "Delete", new {id = item.id});
        }
    }
</td>
    </tr>
}

</table>
